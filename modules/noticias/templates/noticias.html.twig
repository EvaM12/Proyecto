{# terminar fichero
    meter el codigo y estructurarlo con css
 #}
<select name="liga" id="liga">
    <option value="todas">Todas las ligas</option>
    <option value="eng.1">English Premier League &#x1f3f4;&#xe0067;&#xe0062;&#xe0065;&#xe006e;&#xe0067;&#xe007f;
    </option>
    <option value="esp.1">LaLiga EA Sports &#x1f1ea;&#x1f1f8;</option>
    <option value="ita.1">Italian Serie A &#x1f1ee;&#x1f1f9;</option>
    <option value="ger.1">German Bundesliga &#x1f1e9;&#x1f1ea;</option>
    <option value="fra.1">French Ligue 1 &#x1f1eb;&#x1f1f7;</option>
    <option value="uefa.champions">UEFA Champions League</option>
    <option value="uefa.europa">UEFA Europa League</option>
    <option value="uefa.europa.conf">UEFA Conference League</option>
</select>

<div id="articles"></div>

{# {% for noticia in noticias %}
    <div class="noticia">
        <h1>{{ noticia.titular }}</h1>
        <p>{{ noticia.descripcion }}</p>
        <p>{{ noticia.fecha }}</p>
        {# <p>{{ noticia.liga }}</p> #}
        {# <p>{{ noticia.enlace }}</p>
    </div>
{% endfor %} #}

<script>
    function obtenerDatosVariasLigas(ligas) {
        var titulosAgregados = new Set();
        var articlesDiv = $('#articles');
        articlesDiv.empty();

        function realizarSolicitud(liga) {
            var apiUrl = 'https://site.api.espn.com/apis/site/v2/sports/soccer/' + liga + '/news';
            return $.ajax({
                url: apiUrl,
                method: 'GET'
            });
        }

        // Map para almacenar las promesas y las ligas correspondientes
        var promesasMap = ligas.map(function (liga) {
            return realizarSolicitud(liga).then(function (data) {
                var tipoLiga = liga;
                var articles = data.articles || [];

                // Filtrar artículos para evitar repeticiones
                articles = articles.filter(function (article) {
                    if (!titulosAgregados.has(article.headline)) {
                        titulosAgregados.add(article.headline);
                        return true;
                    }
                    return false;
                });

                // Agregar artículos de la liga actual al array ordenado
                return articles.map(function (article) {
                    article.headline = tipoLiga + ' - ' + article.headline;
                    return article;
                });
            });
        });

        // Usar Promise.all para manejar múltiples promesas
        Promise.all(promesasMap)
            .then(function (results) {
                // Flatten el array de resultados
                var sortedArticles = results.flat();

                // Ordenar el array de artículos por fecha
                sortedArticles.sort(function (a, b) {
                    return new Date(b.published) - new Date(a.published);
                });

                // Mostrar los datos en el HTML
                sortedArticles.forEach(function (article) {
                    articlesDiv.append(`<article class='noticia'>
                        <h1>${article.headline}</h1>
                        <p>${article.description}</p>
                        <p>${article.links.api.news.href}</p>
                        <p>${article.published}</p>
                    `);

                    if(article.links.api.news.href.includes('video')){
                        var partes = article.links.api.news.href.split('/');
                        var id = partes[partes.length - 1];

                        articlesDiv.append(`<a href="http://localhost/AllTickets/noticias/video/${id}">Ir a</a>`);
                    } else {
                        var partes = article.links.api.news.href.split('/');
                        var id = partes[partes.length - 1];

                        articlesDiv.append(`<a href="http://localhost/AllTickets/noticias/noticia/${id}">Ir a</a>`);
                    }

                    if (article.images[0] !== undefined && article.images[0] !== null)
                        articlesDiv.append(`<img src="${article.images[0].url}" alt="${article.images[0].caption}">`);

                    var categorias = [];
                    for (var i = 0; i <article.categories.length; i++) {
                        if (article.categories[i].description !== undefined && article.categories[i].description !== null)
                            articlesDiv.append(`<p>${article.categories[i].description}</p>`);
                    }

                    articlesDiv.append(`</article>`)
                });
            })
            .catch(function (error) {
                console.error('Error en una de las solicitudes API', error);
            });
    }

    // Llamar a la función para obtener datos cuando la página esté lista
    $(document).ready(function () {
        obtenerDatosVariasLigas(['esp.1', 'eng.1', 'ger.1', 'fra.1', 'ita.1', 'uefa.champions', 'uefa.europa', 'uefa.europa.conf']);

        $('#liga').on('change', function () {
            var ligas = ($(this).val() === 'todas')
                ? ['esp.1', 'eng.1', 'ger.1', 'fra.1', 'ita.1', 'uefa.champions', 'uefa.europa', 'uefa.europa.conf']
                : [$(this).val()];

            obtenerDatosVariasLigas(ligas);
        });
    });

</script>